import cv2
import mediapipe as mp
import numpy as np
import math
import time

# Kh·ªüi t·∫°o MediaPipe Hands
mp_hands = mp.solutions.hands
mp_draw = mp.solutions.drawing_utils
hands = mp_hands.Hands(min_detection_confidence=0.5, min_tracking_confidence=0.5)

# Bi·∫øn l∆∞u tr·ªØ ƒë·ªô d√†i ng√≥n tay tr∆∞·ªõc ƒë√≥
prev_length = None
press_threshold = 20  # Ng∆∞·ª°ng gi·∫£m ƒë·ªÉ x√°c ƒë·ªãnh nh·∫•n

# H√†m t√≠nh kho·∫£ng c√°ch Euclid gi·ªØa hai ƒëi·ªÉm
def euclidean_distance(p1, p2):
    return math.sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)

# M·ªü camera
cap = cv2.VideoCapture(0)

while cap.isOpened():
    success, frame = cap.read()
    if not success:
        break

    # L·∫≠t ng∆∞·ª£c ·∫£nh ƒë·ªÉ gi·ªëng g∆∞∆°ng
    frame = cv2.flip(frame, 1)
    h, w, c = frame.shape
    
    # Chuy·ªÉn ·∫£nh v·ªÅ RGB
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = hands.process(frame_rgb)

    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            # V·∫Ω landmark b√†n tay
            mp_draw.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # L·∫•y t·ªça ƒë·ªô c√°c ƒëi·ªÉm landmark c·ªßa ng√≥n tr·ªè
            landmarks = hand_landmarks.landmark
            index_tip = (landmarks[mp_hands.HandLandmark.INDEX_FINGER_TIP].x * w,
                         landmarks[mp_hands.HandLandmark.INDEX_FINGER_TIP].y * h)
            index_mcp = (landmarks[mp_hands.HandLandmark.INDEX_FINGER_MCP].x * w,
                         landmarks[mp_hands.HandLandmark.INDEX_FINGER_MCP].y * h)

            # T√≠nh ƒë·ªô d√†i ng√≥n tr·ªè
            finger_length = euclidean_distance(index_tip, index_mcp)

            # Ki·ªÉm tra n·∫øu ƒë·ªô d√†i gi·∫£m ƒë·ªôt ng·ªôt
            if prev_length is not None and prev_length - finger_length > press_threshold:
                print("üü¢ ƒê√£ nh·∫•n!")
                cv2.putText(frame, "Pressed!", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 3)

                # Ph√°t √¢m thanh khi nh·∫•n
                import winsound
                winsound.Beep(1000, 200)

            # C·∫≠p nh·∫≠t gi√° tr·ªã tr∆∞·ªõc ƒë√≥
            prev_length = finger_length

    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    cv2.imshow("Finger Press Detection", frame)

    # Tho√°t khi nh·∫•n 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Gi·∫£i ph√≥ng t√†i nguy√™n
cap.release()
cv2.destroyAllWindows()
